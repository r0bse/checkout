package de.schroeder.checkout.simple.domain;

/**
 * Created by robert on 04.07.16.
 */
public class SkuEntity {

    private final Character productName;
    private final Long defaultCentPrice;
    private final DiscountEntity discountEntity;

    /**
     * @param productName the productname as Character
     * @param defaultCentPrice the price which is normally paid
     * @param discountEntity the discount which is available for this Sku, in this simple
     *                       solution only one discount is available per Sku
     */
    public SkuEntity( Character productName,
                      Long defaultCentPrice,
                      DiscountEntity discountEntity) {

        if( 0>= defaultCentPrice){
            throw new IllegalArgumentException("Prices must be bigger than zero!");
        }
        this.productName = productName;
        this.defaultCentPrice = defaultCentPrice;
        this.discountEntity = discountEntity;
    }

    public Long getDefaultCentPrice() {
        return defaultCentPrice;
    }

    public Character getProductName() {
        return productName;
    }

    public DiscountEntity getDiscountEntity() {
        return discountEntity;
    }

    /**
     * auto generated by IntelliJ
     *
     * @param o
     * @return
     */
    @Override
    public boolean equals( Object o ) {
        if ( this == o ) {
            return true;
        }
        if ( o == null || getClass() != o.getClass() ) {
            return false;
        }

        SkuEntity skuEntity = ( SkuEntity ) o;

        if ( !productName.equals( skuEntity.productName ) ) {
            return false;
        }
        if ( !defaultCentPrice.equals( skuEntity.defaultCentPrice ) ) {
            return false;
        }
        return discountEntity.equals( skuEntity.discountEntity );

    }

    /**
     * auto generated by IntelliJ
     *
     * @return
     */
    @Override
    public int hashCode() {
        int result = productName.hashCode();
        result = 31 * result + defaultCentPrice.hashCode();
        result = 31 * result + discountEntity.hashCode();
        return result;
    }
}
